apiVersion: apps/v1
kind: Deployment
metadata:
  name: planning-service
  namespace: default
  labels:
    app: planning-service
spec:
  replicas: 5
  selector:
    matchLabels:
      app: planning-service
  template:
    metadata:
      name: planning-service
      namespace: default
      labels:
        app: planning-service
    spec:
      containers:
        - name: planning-service
          image: "pusti/rso2324-team22-planning-service:latest"
          ports:
            - containerPort: 8080
              name:  http
          env:
            - name: POSTGRES_SERVER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: postgres_server
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: postgres_planning_database
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres_password
            - name: KAFKA_URL
              value: "$(KAFKA_SERVICE_HOST):$(KAFKA_SERVICE_PORT)"
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: planning-service
spec:
  type: ClusterIP
  selector:
    app: planning-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
