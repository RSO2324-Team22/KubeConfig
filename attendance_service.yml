apiVersion: apps/v1
kind: Deployment
metadata:
  name: attendance-service
  namespace: default
  labels:
    app: attendance-service
spec:
  replicas: 5
  selector:
    matchLabels:
      app: attendance-service
  template:
    metadata:
      name: attendance-service
      namespace: default
      labels:
        app: attendance-service
    spec:
      containers:
        - name: attendance-service
          image: "pusti/rso2324-team22-attendance-service:latest"
          ports:
            - containerPort: 8080
              name:  http
          env:
            - name: CONNECTIONSTRINGS__DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: attendance_service_connection_string
            - name: PLANNINGSERVICE__GRAPHQL__URL
              value: "http://$(PLANNING_SERVICE_SERVICE_HOST):$(PLANNING_SERVICE_SERVICE_PORT)/graphql"
            - name: MEMBERSSERVICE__GRAPHQL__URL
              value: "http://$(MEMBERS_SERVICE_SERVICE_HOST):$(MEMBERS_SERVICE_SERVICE_PORT)/graphql"
            - name: KAFKA_URL
              value: "$(KAFKA_SERVICE_HOST):$(KAFKA_SERVICE_PORT)"
            - name: SERILOG__WRITETO__0__ARGS__NAME
              value: "Graylog"
            - name: SERILOG__WRITETO__0__ARGS__HOSTNAMEORADDRESS
              value: "graylog.monitoring.svc.cluster.local"
            - name: SERILOG__WRITETO__0__ARGS__PORT
              value: "12201"
            - name: SERILOG__WRITETO__0__ARGS__TRANSPORTTYPE
              value: "Udp"
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: attendance-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/health_path: "/healthmetrics"
    prometheus.io/port_name: "http"
spec:
  type: ClusterIP
  selector:
    app: attendance-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
